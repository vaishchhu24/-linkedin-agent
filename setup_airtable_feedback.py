#!/usr/bin/env python3
"""
Setup script for Airtable feedback table.
This script helps you understand what fields are needed in your Airtable feedback table.
"""

import importlib.util
import os
import requests

def setup_airtable_feedback_table():
    """
    Help set up the Airtable feedback table structure.
    """
    print("üìã Airtable Feedback Table Setup Guide")
    print("=" * 50)
    
    # Import config
    project_root = os.path.dirname(os.path.abspath(__file__))
    spec = importlib.util.spec_from_file_location("config", os.path.join(project_root, "config.py"))
    config = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(config)
    
    AIRTABLE_API_KEY = config.AIRTABLE_API_KEY
    AIRTABLE_BASE_ID = config.AIRTABLE_BASE_ID
    AIRTABLE_TABLE_NAME = config.AIRTABLE_TABLE_NAME
    
    print(f"‚úÖ Using Airtable Base: {AIRTABLE_BASE_ID}")
    print(f"‚úÖ Using Airtable Table: {AIRTABLE_TABLE_NAME}")
    print()
    
    print("üìù Required Fields for Feedback Table:")
    print("-" * 40)
    
    required_fields = [
        "Client ID",
        "Tone Preferences", 
        "Content Preferences",
        "Style Preferences", 
        "Avoid",
        "Recent Feedback",
        "Hook Preferences",
        "Content Pillars",
        "Feedback Notes",
        "Created"
    ]
    
    for i, field in enumerate(required_fields, 1):
        print(f"{i:2d}. {field}")
    
    print()
    print("üìã Field Descriptions:")
    print("-" * 40)
    
    field_descriptions = {
        "Client ID": "Unique identifier for the client (e.g., 'vaishnavi')",
        "Tone Preferences": "How the client wants posts to sound (e.g., 'Authentic, Conversational, No promotional language')",
        "Content Preferences": "What topics and content the client prefers (e.g., 'HR consulting challenges, Behind-the-scenes insights')",
        "Style Preferences": "Formatting and style preferences (e.g., 'Short paragraphs, 2-3 hashtags, 120-180 words')",
        "Avoid": "What the client doesn't want (e.g., 'Promotional language, Workshops, Hard selling')",
        "Recent Feedback": "Latest feedback from the client (e.g., 'Posts should feel authentic, Focus on real struggles')",
        "Hook Preferences": "How the client wants posts to start (e.g., 'Short and compelling, Diverse openings')",
        "Content Pillars": "Preferred content types (e.g., 'Pricing & Money Talk, Case Studies, Industry Trends')",
        "Feedback Notes": "Additional notes or specific feedback",
        "Created": "When the feedback was created (auto-generated by Airtable)"
    }
    
    for field, description in field_descriptions.items():
        print(f"‚Ä¢ {field}: {description}")
    
    print()
    print("üîß Setup Instructions:")
    print("-" * 40)
    print("1. Go to your Airtable base")
    print("2. Create a new table called 'Client Feedback' (or use existing)")
    print("3. Add the fields listed above")
    print("4. Set field types:")
    print("   - Client ID: Single line text")
    print("   - Tone/Content/Style Preferences: Long text or Multiple select")
    print("   - Avoid: Long text or Multiple select")
    print("   - Recent Feedback: Long text")
    print("   - Hook Preferences: Long text")
    print("   - Content Pillars: Multiple select")
    print("   - Feedback Notes: Long text")
    print("   - Created: Date (auto-generated)")
    print()
    print("5. Add a sample record for client 'vaishnavi'")
    print("6. Update your config.py with the correct table name")
    print()
    
    # Test connection
    print("üîç Testing Airtable Connection...")
    try:
        url = f"https://api.airtable.com/v0/{AIRTABLE_BASE_ID}/{AIRTABLE_TABLE_NAME}"
        headers = {
            "Authorization": f"Bearer {AIRTABLE_API_KEY}",
            "Content-Type": "application/json"
        }
        
        response = requests.get(url, headers=headers, timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ Airtable connection successful!")
            data = response.json()
            records = data.get('records', [])
            print(f"üìä Found {len(records)} records in the table")
            
            if records:
                print("üìã Sample record fields:")
                sample_fields = list(records[0]['fields'].keys())
                for field in sample_fields:
                    print(f"   ‚Ä¢ {field}")
        else:
            print(f"‚ùå Airtable connection failed: {response.status_code}")
            print("   Make sure your API key and table name are correct")
            
    except Exception as e:
        print(f"‚ùå Error testing Airtable connection: {e}")

def create_sample_feedback_record():
    """
    Create a sample feedback record for testing.
    """
    print("\nüìù Sample Feedback Record for Client 'vaishnavi':")
    print("-" * 50)
    
    sample_record = {
        "Client ID": "vaishnavi",
        "Tone Preferences": "Authentic and conversational, No overly promotional language, Share real experiences and lessons learned, Be encouraging but not preachy",
        "Content Preferences": "Focus on HR consulting challenges and solutions, Share behind-the-scenes insights, Include practical tips and actionable advice, Avoid generic motivational content",
        "Style Preferences": "Use short paragraphs for readability, Include personal stories when relevant, Keep it casual and natural, End with encouragement or reflection, Use 2-3 hashtags maximum, Write 120-180 words",
        "Avoid": "Overly promotional language, Generic motivational quotes, Hard selling or aggressive CTAs, Story format (prefer other content pillars), Workshop announcements, Free webinar promotions",
        "Recent Feedback": "Posts should feel authentic and not AI-generated, Focus on real HR consultant struggles and solutions, Keep the tone conversational and relatable, Avoid making up hypothetical data",
        "Hook Preferences": "Short and compelling, Diverse opening sentences, Avoid repeated phrases like 'ever wondered', Make hooks feel natural and conversational",
        "Content Pillars": ["Pricing & Money Talk", "Case Studies", "Opinion & Industry Trends", "Behind-the-Scenes"],
        "Feedback Notes": "Client prefers authentic, conversational posts that focus on real HR consulting challenges. Avoid promotional language and keep it natural."
    }
    
    for field, value in sample_record.items():
        if isinstance(value, list):
            print(f"{field}: {', '.join(value)}")
        else:
            print(f"{field}: {value}")

if __name__ == "__main__":
    setup_airtable_feedback_table()
    create_sample_feedback_record() 